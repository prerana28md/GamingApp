{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'https://localhost:9001';\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  timeout: 10000 // 10 second timeout\n});\n\n// Add request interceptor for logging\napi.interceptors.request.use(config => {\n  console.log(`Making ${config.method.toUpperCase()} request to ${config.url}`);\n  return config;\n}, error => {\n  console.error('Request error:', error);\n  return Promise.reject(error);\n});\n\n// Add response interceptor for error handling\napi.interceptors.response.use(response => {\n  console.log(`Response received from ${response.config.url}:`, response.status);\n  return response;\n}, error => {\n  var _error$response;\n  console.error('Response error:', (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status, error.message);\n  if (error.code === 'ECONNREFUSED') {\n    console.error('Backend server is not running on port 9001');\n  }\n  return Promise.reject(error);\n});\n\n// Games API\nexport const gamesAPI = {\n  getAll: () => api.get('/games'),\n  getById: id => api.get(`/games/${id}`),\n  create: game => api.post('/games', game),\n  update: (id, game) => api.put(`/games/${id}`, game),\n  delete: id => api.delete(`/games/${id}`)\n};\n\n// Members API\nexport const membersAPI = {\n  getAll: () => api.get('/members'),\n  getById: id => api.get(`/members/${id}`),\n  create: member => api.post('/members', member),\n  update: (id, member) => api.put(`/members/${id}`, member),\n  delete: id => api.delete(`/members/${id}`)\n};\n\n// Transactions API\nexport const transactionsAPI = {\n  getAll: () => api.get('/transactions'),\n  getByMember: memberId => api.get(`/transactions/member/${memberId}`),\n  getByGame: gameId => api.get(`/transactions/game/${gameId}`),\n  create: transaction => api.post('/transactions', transaction)\n};\n\n// Recharges API\nexport const rechargesAPI = {\n  getAll: () => api.get('/recharges'),\n  getByMember: memberId => api.get(`/recharges/member/${memberId}`),\n  create: recharge => api.post('/recharges', recharge)\n};\n\n// Admins API\nexport const adminsAPI = {\n  getAll: () => api.get('/admins'),\n  getByDate: date => api.get(`/admins/date/${date}`),\n  create: admin => api.post('/admins', admin)\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","api","create","baseURL","headers","timeout","interceptors","request","use","config","console","log","method","toUpperCase","url","error","Promise","reject","response","status","_error$response","message","code","gamesAPI","getAll","get","getById","id","game","post","update","put","delete","membersAPI","member","transactionsAPI","getByMember","memberId","getByGame","gameId","transaction","rechargesAPI","recharge","adminsAPI","getByDate","date","admin"],"sources":["D:/GamingApp/gameapp/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = 'https://localhost:9001';\r\n\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n  timeout: 10000, // 10 second timeout\r\n});\r\n\r\n// Add request interceptor for logging\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    console.log(`Making ${config.method.toUpperCase()} request to ${config.url}`);\r\n    return config;\r\n  },\r\n  (error) => {\r\n    console.error('Request error:', error);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Add response interceptor for error handling\r\napi.interceptors.response.use(\r\n  (response) => {\r\n    console.log(`Response received from ${response.config.url}:`, response.status);\r\n    return response;\r\n  },\r\n  (error) => {\r\n    console.error('Response error:', error.response?.status, error.message);\r\n    if (error.code === 'ECONNREFUSED') {\r\n      console.error('Backend server is not running on port 9001');\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Games API\r\nexport const gamesAPI = {\r\n  getAll: () => api.get('/games'),\r\n  getById: (id) => api.get(`/games/${id}`),\r\n  create: (game) => api.post('/games', game),\r\n  update: (id, game) => api.put(`/games/${id}`, game),\r\n  delete: (id) => api.delete(`/games/${id}`),\r\n};\r\n\r\n// Members API\r\nexport const membersAPI = {\r\n  getAll: () => api.get('/members'),\r\n  getById: (id) => api.get(`/members/${id}`),\r\n  create: (member) => api.post('/members', member),\r\n  update: (id, member) => api.put(`/members/${id}`, member),\r\n  delete: (id) => api.delete(`/members/${id}`),\r\n};\r\n\r\n// Transactions API\r\nexport const transactionsAPI = {\r\n  getAll: () => api.get('/transactions'),\r\n  getByMember: (memberId) => api.get(`/transactions/member/${memberId}`),\r\n  getByGame: (gameId) => api.get(`/transactions/game/${gameId}`),\r\n  create: (transaction) => api.post('/transactions', transaction),\r\n};\r\n\r\n// Recharges API\r\nexport const rechargesAPI = {\r\n  getAll: () => api.get('/recharges'),\r\n  getByMember: (memberId) => api.get(`/recharges/member/${memberId}`),\r\n  create: (recharge) => api.post('/recharges', recharge),\r\n};\r\n\r\n// Admins API\r\nexport const adminsAPI = {\r\n  getAll: () => api.get('/admins'),\r\n  getByDate: (date) => api.get(`/admins/date/${date}`),\r\n  create: (admin) => api.post('/admins', admin),\r\n};\r\n\r\nexport default api;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}